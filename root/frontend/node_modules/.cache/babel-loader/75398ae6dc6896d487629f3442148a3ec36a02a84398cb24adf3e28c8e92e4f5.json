{"ast":null,"code":"var _jsxFileName = \"/app/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [audioFile, setAudioFile] = useState(null);\n  const handleDrop = acceptedFiles => {\n    setAudioFile(acceptedFiles[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: handleDrop,\n      accept: \"audio/*\",\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop an audio file here, or click to select one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), audioFile && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected audio file: \", audioFile.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"oicS0eclY/LezNDIUXbTVG87EtI=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","Dropzone","jsxDEV","_jsxDEV","AudioUploader","_s","audioFile","setAudioFile","handleDrop","acceptedFiles","children","onDrop","accept","getRootProps","getInputProps","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/app/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nconst AudioUploader = () => {\r\n  const [audioFile, setAudioFile] = useState(null);\r\n\r\n  const handleDrop = (acceptedFiles) => {\r\n    setAudioFile(acceptedFiles[0]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dropzone onDrop={handleDrop} accept=\"audio/*\">\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <p>Drag 'n' drop an audio file here, or click to select one</p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      {audioFile && <p>Selected audio file: {audioFile.name}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioUploader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMQ,UAAU,GAAIC,aAAa,IAAK;IACpCF,YAAY,CAACE,aAAa,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACF,QAAQ;MAACU,MAAM,EAAEH,UAAW;MAACI,MAAM,EAAC,SAAS;MAAAF,QAAA,EAC3CA,CAAC;QAAEG,YAAY;QAAEC;MAAc,CAAC,kBAC/BX,OAAA;QAAA,GAASU,YAAY,CAAC,CAAC;QAAAH,QAAA,gBACrBP,OAAA;UAAA,GAAWW,aAAa,CAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9Bf,OAAA;UAAAO,QAAA,EAAG;QAAwD;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,EACVZ,SAAS,iBAAIH,OAAA;MAAAO,QAAA,GAAG,uBAAqB,EAACJ,SAAS,CAACa,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACb,EAAA,CApBID,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAsBnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}